Design for Tor Fuzzer

1. Configure the kind of fuzzing desired

1A. Request configuration

1A1. Expected or Unexpected request
	i.e. would a client typically generate a request like this?

1A2. Missing or Additional Fields

1A3. Formats / Character classes used in fuzzing
1A3a. Canonical/Naive
	i.e. a programmer’s first cut at the spec
1A3b. Correct but Atypical
	i.e. test the boundaries of the spec

From Tor’s dir-spec.txt Appendix B:

"Fingerprints" in these URLs are base16-encoded SHA1 hashes.
(NOTE: Due to squid proxy url limitations at most 96 fingerprints can be retrieved in a single request.)

The fingerprints can be shortened to a length of any multiple of two, using only the leftmost part of the encoded fingerprint.  Tor uses 3 bytes (6 hex characters) of the fingerprint.

Clients SHOULD sort the fingerprints in ascending order.  Server MUST accept any order.

Clients SHOULD use upper case letters (A-F) when base16-encoding fingerprints. Servers MUST accept both upper and lower case fingerprints in requests.

Microdescriptor hashes are base64 encoded with trailing =s 
omitted for size and for
consistency with the microdescriptor consensus format.  -s are used
instead of +s to separate items, since the + character is used in
base64 encoding.

(NOTE: Due to squid proxy url limitations at most 92 microdescriptor hashes can be retrieved in a single request.)

1A3c. Incorrect but Similar
	i.e. break the boundaries of the spec
1A3d. Random
	i.e. what spec?

From Tor’s dir-spec.txt Section 6:

1A4. HTTP Standards Compliance
All directory information is uploaded and downloaded with HTTP.
1A4a. HTTP 1.0 (Must)
1A4b. HTTP 1.1+ (May)

1A5. HTTP headers (Server)
1A5a. Content-Length: <byte count> (May)
1A5b. Content-Encoding: < deflate | identity > (Should)

From Tor’s dir-spec.txt Appendix B:

Clients MUST handle compressed concatenated information in two forms:
  - A concatenated list of zlib-compressed objects.
  - A zlib-compressed concatenated list of objects.
Directory servers MAY generate either format: the former requires less
CPU, but the latter requires less bandwidth.

Note: this could be interesting to test…

1A5c. X-Your-Address-Is: < a.b.c.d > (May)
1A5c1. Tunnelled over BEGIN_DIR: 
	“from which the circuit reached them” (Should)
	Is this ambiguous?

1A6. HTTP headers (Client)
1A6a. If-Modified-Since (?)

1A7. Caching
1A7a. Disable Multiple (Should)
1A7b. Enable Single / All (May)

1A8. HTTP status codes
“other code SHOULD NOT rely on specific status codes yet.”

1A8a. OK
	200 Ok
	304 Unchanged (with If-Modified-Since)

1A8b. Correctly Rejected
	400 Malformed
	404 Not Found
	503 Declined

1A8c. Incorrectly Handled
	200 Ok (to malformed request)
	304 Unchanged (without If-Modified-Since)
	400 Malformed (to compliant request)
	404 Not Found (to malformed request)
	503 Declined (to malformed request)

1A9. Methods / URLs
1A9a. GET

From Tor’s dir-spec.txt Appendix B:

Retrieving from Directory Caches:

Consensus:

http://<hostname>/tor/status-vote/current/consensus.z

F1, F2, etc. are authority identity fingerprints the client trusts.
http://<hostname>/tor/status-vote/current/consensus/<F1>+<F2>+<F3>.z

Servers will only return a consensus if more than half of the requested
authorities have signed the document, otherwise a 404 error will be sent
back.

Clients SHOULD use this format when requesting consensus documents from
directory authority servers and from caches running a version of Tor
that is known to support this URL format. (0.2.1.1-alpha)

Key Certificates:

http://<hostname>/tor/keys/all.z
http://<hostname>/tor/keys/fp/<F>.z

signing key fingerprint … <S>

http://<hostname>/tor/keys/sk/<S>.z
http://<hostname>/tor/keys/fp-sk/<F>-<S>.z

The … fp-sk format was not supported before Tor 0.2.1.9-alpha:
http://<hostname>/tor/keys/fp-sk/<F1>-<S1>+<F2>-<S2>.z

Server Descriptors:

Implementations SHOULD NOT download descriptors by identity key
fingerprint. This allows a corrupted server (in collusion with a cache) to
provide a unique descriptor to a client, and thereby partition that client
from the rest of the network.)

http://<hostname>/tor/server/fp/<F>.z
http://<hostname>/tor/server/fp/<F1>+<F2>+<F3>.z

descriptors with digests <D1>,<D2>,<D3> should be available at:
http://<hostname>/tor/server/d/<D1>+<D2>+<D3>.z

The most recent descriptor for this server:
http://<hostname>/tor/server/authority.z
Nothing in the Tor protocol uses this resource yet, 
[but] the official Tor implementations use this resource to test whether a server's own DirPort is reachable.

http://<hostname>/tor/server/all.z

Extra-Info:

http://<hostname>/tor/extra/d/...
http://<hostname>/tor/extra/fp/...
http://<hostname>/tor/extra/all[.z]
http://<hostname>/tor/extra/authority[.z]

Microdescriptors:

microdescriptors with base64 hashes <D1>,<D2>,<D3>:
http://<hostname>/tor/micro/d/<D1>-<D2>-<D3>[.z]

Consensus Flavors:

F = < “ns” (standard) | “microdesc” (spec) / “micro” (path) | ? >

http://<hostname>/tor/status-vote/(current|next)/consensus-F.z. and
http://<hostname>/tor/status-vote/(current|next)/consensus-F/<FP1>+....z.


Retrieving from Authorities Only:

Key Certificate:

http://<hostname>/tor/keys/authority.z

Votes:

http://<hostname>/tor/status-vote/next/authority.z
http://<hostname>/tor/status-vote/current/authority.z

<fp> is the fingerprint of the other authority's identity key
http://<hostname>/tor/status-vote/next/<fp>.z
http://<hostname>/tor/status-vote/current/<fp>.z

<d> is the digest of the vote document
http://<hostname>/tor/status-vote/next/d/<d>.z
http://<hostname>/tor/status-vote/current/d/<d>.z

Consensus:

http://<hostname>/tor/status-vote/next/consensus.z
http://<hostname>/tor/status-vote/current/consensus.z

Consensus Signature (Detached):

http://<hostname>/tor/status-vote/next/consensus-signatures.z
http://<hostname>/tor/status-vote/current/consensus-signatures.z


1A9b. POST

Uploading:

Router Descriptors:

After generating a descriptor, ORs upload them to every directory
authority they know, by posting them (in order) to the URL

http://<hostname:port>/tor/

Router descriptors may not exceed 20,000 bytes in length; extra-info
documents may not exceed 50,000 bytes in length. If they do, the
authorities SHOULD reject them.

Note: are these compressed, or not?

Authorities:

Votes:
http://<hostname>/tor/post/vote

Consensus Signature (Detached):
http://<hostname>/tor/post/consensus-signature

1A9c. Others?


1B. Limits on fuzzing
1B1. Time
1B2. Storage
1B3. Iterations
1B4. Errors

2. Generate request / document
3. Save by hash
4. Log by time

5. Send to victim 

5A. Platform
5A1. Linux 80%
5A2. Windows 15%
5A3. FreeBSD 3%
5A4. Darwin/OS X 1%
5A5. Others? 1%

5B. Platform Version
5C. Library Versions
5D. Compiler / Compiler Options
5E. Tor Version
5F. Tor Features

5G. Proxies / Firewalls
5G1. Squid
5G2. Others?

6. Handle response
6A. Record response
6B. Handle failures:
6B1. Restart if it dies
6B2. SIGHUP/restart if it doesn’t answer
6B3. ? if it produces bad response
6C. Re-run previous request(s) to ensure reproducibility

7. Rinse, Lather, and Repeat from Step 1
